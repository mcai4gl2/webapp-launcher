ext {
    spring_version = '4.1.1.RELEASE'
    tomcat_embed_version = '8.0.21'
}

ext.libraries = [
        slf4j: [
                'org.slf4j:slf4j-api:1.7.12'
        ],
        logback: [
                'ch.qos.logback:logback-core:1.1.3',
                'ch.qos.logback:logback-classic:1.1.3'
        ],
        junit: [
                'junit:junit:4.11',
                'org.mockito:mockito-all:1.10.8'
        ],
        tomcatEmbed: [
                "org.apache.tomcat.embed:tomcat-embed-core:$tomcat_embed_version",
                "org.apache.tomcat.embed:tomcat-embed-logging-juli:$tomcat_embed_version",
                "org.apache.tomcat.embed:tomcat-embed-jasper:$tomcat_embed_version",
                "org.apache.tomcat:tomcat-jasper:$tomcat_embed_version",
                "org.apache.tomcat:tomcat-jasper-el:$tomcat_embed_version",
                "org.apache.tomcat:tomcat-el-api:$tomcat_embed_version",
                "org.apache.tomcat:tomcat-jsp-api:$tomcat_embed_version"
        ],
        jetty: [
                "org.eclipse.jetty:jetty-webapp:9.3.0.M2"
        ],
        jettyClient: 'org.eclipse.jetty:jetty-client:9.3.0.M2',
        io: 'commons-io:commons-io:2.4',
        guice: 'com.google.inject:guice:3.0',
        servlet: 'javax.servlet:javax.servlet-api:3.0.1',
        springCore: [
                "org.springframework:spring-core:$spring_version",
                "org.springframework:spring-context:$spring_version"
        ],
        springMvc: [
                "org.springframework:spring-webmvc:$spring_version"
        ],
        springTest: [
                "org.springframework:spring-test:$spring_version"
        ],
        guava: 'com.google.guava:guava:18.0',
        jackson: [
                'com.fasterxml.jackson.core:jackson-core:2.4.3',
                'com.fasterxml.jackson.core:jackson-databind:2.4.3'
        ],
        io: 'commons-io:commons-io:2.4',
        cli: 'commons-cli:commons-cli:1.2'
]

allprojects {
    apply plugin: 'idea'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    group = 'webapp.launcher'
    version = '0.0.1-SNAPSHOT'

    println "Building ${project.name} ($version) with Gradle [${project.gradle.gradleVersion}], Java [${System.getProperty('java.version')}]"

    repositories {
        mavenCentral()
    }

    dependencies {
        testCompile libraries.junit
    }

    jar {
        destinationDir = file("${buildDir}/output")
    }

    jar << {
        new File(jar.destinationDir.path, "build-info.txt").withWriter {
            out ->
                out.writeLine("Project Name: ${project.name}")
                out.writeLine("Project Version: ${project.version}")
                out.writeLine("Build Time: " + new Date())
        }
    }

    test {
        testLogging {
            events "passed", "skipped", "failed"
        }
    }

    publishing {
        apply plugin: 'maven'

        publications {
            myPublication(MavenPublication) {
                if (components.getNames().contains('web'))
                    from components.web
                else
                    from components.java
            }
        }
        repositories {
            def path = version.contains('SNAPSHOT')? 'snapshots':'releases'
            maven {
                url "file:/${project.parent.projectDir}/artifacts/$path"
            }
        }
    }

    clean {
        delete "file:/${project.parent.projectDir}/artifacts"
    }
}